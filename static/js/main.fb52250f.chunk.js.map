{"version":3,"sources":["components/Header.jsx","contexts/CurrentUserContext.js","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/EditProfilePopup.jsx","components/AddPlacePopup.jsx","components/EditAvatarPopup.jsx","components/ImagePopup.jsx","utils/Api.js","components/App.jsx","index.js","images/logo.svg"],"names":["Header","props","className","src","logo","alt","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","onCardClick","type","aria-label","onCardLike","length","onCardDelete","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","item","key","Footer","PopupWithForm","isOpen","title","action","method","onSubmit","children","submitButtonState","onClose","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","required","minLength","maxLength","autoComplete","value","onChange","target","AddPlacePopup","placeName","setPlaceName","placeLink","setPlaceLink","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","ImagePopup","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","statusText","fetch","then","_checkErrors","info","body","JSON","stringify","avatarUrl","cardId","authorization","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","editSubmitButtonState","seteditSubmitButtonState","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCards","isAddPlacePopupOpen","setIsAddPlacePopupOpen","addCardSubmitButtonState","setAddCardSubmitButtonState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","avatarUpdateSubmitButtonState","setAvatarUpdateSubmitButtonState","closeAllPopups","all","getProfileInfo","getCards","userInfo","initialCards","catch","err","console","error","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","data","editProfile","finally","addCard","updateAvatar","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"mQAWeA,EARA,SAACC,GACd,OACE,4BAAQC,UAAU,UAChB,yBAAKC,IAAKC,IAAMC,IAAI,4EAAgBH,UAAU,mBCHvCI,EAAqBC,IAAMC,gBCiDzBC,EAjDF,SAACR,GACZ,IAAMS,EAAcH,IAAMI,WAAWL,GAC/BM,EAAQX,EAAMY,KAAKC,MAAMC,MAAQL,EAAYK,IAC7CC,EAAyB,yCAAqCJ,GAAS,wCAEvEK,EAAUhB,EAAMY,KAAKK,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEL,MAAQL,EAAYK,OAC7DM,EAAuB,sCAAkCJ,GAAW,sCAM1E,OACE,wBAAIf,UAAU,wBACZ,yBACEA,UAAU,wBACVC,IAAKF,EAAMY,KAAKS,KAChBjB,IAAKJ,EAAMY,KAAKU,KAChBC,QAVkB,WACtBvB,EAAMwB,YAAYxB,EAAMY,SAYtB,yBAAKX,UAAU,2BACb,wBAAIA,UAAU,wBAAwBD,EAAMY,KAAKU,MACjD,yBAAKrB,UAAU,kCACb,4BACEA,UAAWmB,EACXK,KAAK,SACLC,aAAW,mDACXH,QAAS,WACPvB,EAAM2B,WAAW3B,EAAMY,SAG3B,uBAAGX,UAAU,gCACVD,EAAMY,KAAKK,MAAMW,SAGtB,4BACE3B,UAAWc,EACXU,KAAK,SACLC,aAAW,6CACXH,QAAS,WACPvB,EAAM6B,aAAa7B,EAAMY,YCetBkB,EAvDF,SAAC9B,GACZ,IAAMS,EAAcC,qBAAWL,GAE/B,OACE,0BAAMJ,UAAU,QACd,6BAASA,UAAU,WACjB,yBAAKA,UAAU,2BAA2BsB,QAASvB,EAAM+B,cACvD,yBACE7B,IAAKO,EAAYuB,OACjB5B,IAAI,sEACJH,UAAU,oBAId,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,kBACb,wBAAIA,UAAU,iBAAiBQ,EAAYa,MAC3C,4BACErB,UAAU,uBACVwB,KAAK,SACLC,aAAW,iFACXH,QAASvB,EAAMiC,iBAInB,uBAAGhC,UAAU,wBAAwBQ,EAAYyB,QAGnD,4BACEjC,UAAU,sBACVwB,KAAK,SACLC,aAAW,mDACXH,QAASvB,EAAMmC,cAInB,6BAASlC,UAAU,kBACjB,wBAAIA,UAAU,wBACXD,EAAMoC,MAAMC,KAAI,SAACC,GAChB,OACE,kBAAC,EAAD,CACE1B,KAAM0B,EACNC,IAAKD,EAAKxB,IACVU,YAAaxB,EAAMwB,YACnBG,WAAY3B,EAAM2B,WAClBE,aAAc7B,EAAM6B,sBCvCrBW,EARA,SAACxC,GACd,OACE,4BAAQC,UAAU,UAChB,uBAAGA,UAAU,qBAAb,4BC2BSwC,EA9BO,SAACzC,GACrB,OACE,yBAAKC,UAAS,gBAAWD,EAAMsB,KAAjB,YAAyBtB,EAAM0C,OAAS,eAAiB,KACrE,yBAAKzC,UAAU,oBACb,wBAAIA,UAAU,gBAAgBD,EAAM2C,OAEpC,0BACEC,OAAO,IACPtB,KAAI,eAAUtB,EAAMsB,MACpBrB,UAAU,cACV4C,OAAO,OACPC,SAAU9C,EAAM8C,UAEf9C,EAAM+C,SACP,4BAAQtB,KAAK,SAASxB,UAAU,iBAC7BD,EAAMgD,oBAIX,4BACE/C,UAAU,sBACVwB,KAAK,SACLC,aAAW,6CACXH,QAASvB,EAAMiD,aCiDVC,EAtEU,SAAClD,GACxB,IAAMS,EAAcC,qBAAWL,GADG,EAEV8C,mBAAS,IAFC,mBAE3B7B,EAF2B,KAErB8B,EAFqB,OAGID,mBAAS,IAHb,mBAG3BE,EAH2B,KAGdC,EAHc,KA2BlC,OALAC,qBAAU,WACRH,EAAQ3C,EAAYa,MACpBgC,EAAe7C,EAAYyB,SAC1B,CAACzB,EAAaT,EAAM0C,SAGrB,kBAAC,EAAD,CACEpB,KAAK,aACLqB,MAAM,4HACNK,kBAAmBhD,EAAMgD,kBACzBN,OAAQ1C,EAAM0C,OACdO,QAASjD,EAAMiD,QACfH,SArBqB,SAACU,GACxBA,EAAEC,iBAEFzD,EAAM0D,aAAa,CACjBpC,OACAY,MAAOmB,KAiBPN,SACE,oCACE,2BACEtB,KAAK,OACLH,KAAK,eACLqC,GAAG,qBACHC,YAAY,8CACZ3D,UAAU,eACV4D,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,aAAa,MACbC,MAAO3C,EACP4C,SA3Ce,SAACV,GACxBJ,EAAQI,EAAEW,OAAOF,UA4CX,uBAAGhE,UAAU,6BAA6B0D,GAAG,uBAC7C,2BACElC,KAAK,OACLH,KAAK,cACLqC,GAAG,oBACHC,YAAY,kFACZ3D,UAAU,eACV4D,UAAQ,EACRC,UAAU,IACVC,UAAU,MACVC,aAAa,MACbC,MAAOZ,EACPa,SArDsB,SAACV,GAC/BF,EAAeE,EAAEW,OAAOF,UAsDlB,uBAAGhE,UAAU,6BAA6B0D,GAAG,0BCAxCS,EAjEO,SAACpE,GAAW,IAAD,EACGmD,mBAAS,IADZ,mBACxBkB,EADwB,KACbC,EADa,OAEGnB,mBAAS,IAFZ,mBAExBoB,EAFwB,KAEbC,EAFa,KAuB/B,OACE,kBAAC,EAAD,CACElD,KAAK,YACLqB,MAAM,gEACNK,kBAAmBhD,EAAMgD,kBACzBN,OAAQ1C,EAAM0C,OACdO,QAASjD,EAAMiD,QACfH,SA1ByB,SAACU,GAC5BA,EAAEC,iBAEFzD,EAAMmC,WAAW,CACfb,KAAM+C,EACNhD,KAAMkD,IAGRD,EAAa,IACbE,EAAa,KAkBXzB,SACE,oCACE,2BACEtB,KAAK,OACLH,KAAK,aACLqC,GAAG,mBACHC,YAAY,mDACZ3D,UAAU,eACV4D,UAAQ,EACRC,UAAU,IACVC,UAAU,KACVC,aAAa,MACbC,MAAOI,EACPH,SA5BmB,SAACV,GAC5Bc,EAAad,EAAEW,OAAOF,UA6BhB,uBAAGhE,UAAU,6BAA6B0D,GAAG,qBAE7C,2BACElC,KAAK,MACLH,KAAK,aACLqC,GAAG,mBACHC,YAAY,qGACZ3D,UAAU,eACV4D,UAAQ,EACRI,MAAOM,EACPL,SArCmB,SAACV,GAC5BgB,EAAahB,EAAEW,OAAOF,UAsChB,uBAAGhE,UAAU,6BAA6B0D,GAAG,yBCpBxCc,EAtCS,SAACzE,GACvB,IAAM0E,EAAWC,mBAQjB,OACE,kBAAC,EAAD,CACIrD,KAAK,sBACLqB,MAAM,wFACNK,kBAAmBhD,EAAMgD,kBACzBN,OAAQ1C,EAAM0C,OACdO,QAASjD,EAAMiD,QACfH,SAd2B,SAACU,GAChCA,EAAEC,iBAEFzD,EAAM4E,eAAeF,EAASG,QAAQZ,OACtCS,EAASG,QAAQZ,MAAQ,IAWrBlB,SACE,oCACE,2BACE+B,IAAKJ,EACLjD,KAAK,MACLH,KAAK,cACLqC,GAAG,oBACHC,YAAY,qGACZ3D,UAAU,eACV4D,UAAQ,IAEV,uBACE5D,UAAU,6BACV0D,GAAG,0BCDFoB,EA9BI,SAAC/E,GAClB,OACE,oCACE,yBACEC,UAAS,UAAKD,EAAMsB,KAAX,YAAmBtB,EAAM0C,OAAS,mBAAqB,KAEhE,yBAAKzC,UAAU,wBACb,4BAAQA,UAAU,sBAChB,yBACEC,IAAKF,EAAMY,KAAKS,KAChBjB,IAAKJ,EAAMY,KAAKU,KAChBrB,UAAU,qBAEZ,gCAAYA,UAAU,sBACnBD,EAAMY,KAAKU,OAIhB,4BACErB,UAAU,0BACVwB,KAAK,SACLC,aAAW,6CACXH,QAASvB,EAAMiD,c,cCqFZ+B,EAPH,I,WArGV,cAA+B,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QAAW,oBAC5BC,KAAKC,KAAOH,EACZE,KAAKE,SAAWH,E,yDAKLI,GACX,OAAIA,EAAIC,GACCD,EAAIE,OAEJC,QAAQC,OAAR,iDACqCJ,EAAIK,OADzC,YACmDL,EAAIM,e,uCAQhE,OAAOC,MAAM,GAAD,OAAIV,KAAKC,KAAT,aAA0B,CACpCvC,OAAQ,MACRqC,QAASC,KAAKE,WACbS,KAAKX,KAAKY,gB,iCAMb,OAAOF,MAAM,GAAD,OAAIV,KAAKC,KAAT,UAAuB,CACjCvC,OAAQ,MACRqC,QAASC,KAAKE,WACbS,KAAKX,KAAKY,gB,kCAKHC,GACV,OAAOH,MAAM,GAAD,OAAIV,KAAKC,KAAT,aAA0B,CACpCvC,OAAQ,QACRqC,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnB7E,KAAM0E,EAAK1E,KACXY,MAAO8D,EAAK9D,UAEb4D,KAAKX,KAAKY,gB,mCAKFK,GACX,OAAOP,MAAM,GAAD,OAAIV,KAAKC,KAAT,oBAAiC,CAC3CvC,OAAQ,QACRqC,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnBnE,OAAQoE,MAETN,KAAKX,KAAKY,gB,iCAKU,IAAfzE,EAAc,EAAdA,KAAMD,EAAQ,EAARA,KACd,OAAOwE,MAAM,GAAD,OAAIV,KAAKC,KAAT,UAAuB,CACjCvC,OAAQ,OACRqC,QAASC,KAAKE,SACdY,KAAMC,KAAKC,UAAU,CACnB7E,KAAMA,EACND,KAAMA,MAEPyE,KAAKX,KAAKY,gB,iCAKJM,GACT,OAAOR,MAAM,GAAD,OAAIV,KAAKC,KAAT,kBAAuBiB,GAAU,CAC3CxD,OAAQ,SACRqC,QAASC,KAAKE,WACbS,KAAKX,KAAKY,gB,2CAOMM,EAAQrF,GAC3B,OAAIA,EACK6E,MAAM,GAAD,OAAIV,KAAKC,KAAT,wBAA6BiB,GAAU,CACjDxD,OAAQ,SACRqC,QAASC,KAAKE,WACbS,KAAKX,KAAKY,cAENF,MAAM,GAAD,OAAIV,KAAKC,KAAT,wBAA6BiB,GAAU,CACjDxD,OAAQ,MACRqC,QAASC,KAAKE,WACbS,KAAKX,KAAKY,kB,KAKP,CAAQ,CAClBd,IAAK,8CACLC,QAAS,CACPoB,cAAe,uCACf,eAAgB,sBC8ELC,EA7KH,WAAM,MAIsBpD,mBAAS,CAC7C7B,KAAM,GACNY,MAAO,GACPF,OAAQ,KAPM,mBAITvB,EAJS,KAII+F,EAJJ,OAY4CrD,oBAAS,GAZrD,mBAYTsD,EAZS,KAYeC,EAZf,OAa0CvD,mBAAS,0DAbnD,mBAaTwD,EAbS,KAacC,EAbd,OAmCgCzD,oBAAS,GAnCzC,mBAmCT0D,EAnCS,KAmCSC,EAnCT,OAoCwB3D,mBAAS,IApCjC,mBAoCT4D,EApCS,KAoCKC,EApCL,OAqCU7D,mBAAS,IArCnB,mBAqCTf,EArCS,KAqCF6E,EArCE,OAyCsC9D,oBAAS,GAzC/C,mBAyCT+D,EAzCS,KAyCYC,EAzCZ,OA0CgDhE,mBAAS,0DA1CzD,mBA0CTiE,EA1CS,KA0CiBC,EA1CjB,OAwF0ClE,oBAAS,GAxFnD,mBAwFTmE,EAxFS,KAwFcC,EAxFd,OAyF0DpE,mBAAS,0DAzFnE,mBAyFTqE,EAzFS,KAyFsBC,EAzFtB,KAkHVC,GAAiB,WACrBhB,GAA0B,GAC1BS,GAAuB,GACvBI,GAAyB,GACzBT,GAAoB,IAatB,OAVAvD,qBAAU,WACRkC,QAAQkC,IAAI,CAAC3C,EAAI4C,iBAAkB5C,EAAI6C,aACpC/B,MAAK,SAACR,GAAS,IAAD,cACoBA,EADpB,GACNwC,EADM,KACIC,EADJ,KAEbvB,EAAesB,GACfb,EAASc,MAEVC,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,QAC/B,IAGD,kBAAC5H,EAAmB+H,SAApB,CAA6BnE,MAAOxD,GAClC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEwB,cAxHyB,WAC7ByE,GAA0B,IAwHtBvE,WA5FsB,WAC1BgF,GAAuB,IA4FnBpF,aA9CwB,WAC5BwF,GAAyB,IA8CrB/F,YA7BkB,SAACZ,GACvBoG,EAAgBpG,GAChBkG,GAAoB,IA4BhB1E,MAAOA,EACPT,WA3EiB,SAACf,GACtB,IAAMI,EAAUJ,EAAKK,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEL,MAAQL,EAAYK,OAC7DkE,EACGqD,qBAAqBzH,EAAKE,IAAKE,GAC/B8E,MAAK,SAACwC,GACL,IAAMC,EAAWnG,EAAMC,KAAI,SAACmG,GAAD,OAAQA,EAAE1H,MAAQF,EAAKE,IAAMwH,EAAUE,KAClEvB,EAASsB,MAEVP,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,OAoE5BpG,aAjEmB,SAACjB,GACxBoE,EACGyD,WAAW7H,EAAKE,KAChBgF,MAAK,WACJ,IAAMyC,EAAWnG,EAAMsG,QAAO,SAACpG,GAAD,OAAUA,EAAKxB,MAAQF,EAAKE,OAC1DmG,EAASsB,MAEVP,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,SA4D9B,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEvF,OAAQ+D,EACRxD,QAASyE,GACThE,aAhImB,SAACiF,GACxB/B,EAAyB,mEACzB5B,EACG4D,YAAYD,GACZ7C,MAAK,SAACR,GACLkB,EAAelB,GACfoC,QAEDM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAC7BY,SAAQ,WACPjC,EAAyB,8DAuHzB5D,kBAAmB2D,IAErB,kBAAC,EAAD,CACEjE,OAAQwE,EACRjE,QAASyE,GACTvF,WAzGiB,SAACwG,GACtBtB,EAA4B,mEAC5BrC,EACG8D,QAAQ,CACPxH,KAAMqH,EAAKrH,KACXD,KAAMsH,EAAKtH,OAEZyE,MAAK,SAACR,GACL2B,EAAS,CAAC3B,GAAF,mBAAUlD,KAClBsF,QAEDM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAC7BY,SAAQ,WACPxB,EAA4B,8DA6F5BrE,kBAAmBoE,IAGrB,kBAAC,EAAD,CACE1E,OAAQ4E,EACRrE,QAASyE,GACT9C,eAjEqB,SAACK,GAC1BwC,EAAiC,mEACjCzC,EACG+D,aAAa9D,GACba,MAAK,SAACR,GACLkB,EAAe,2BAAK/F,GAAN,IAAmBuB,OAAQsD,EAAItD,UAC7C0F,QAEDM,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAMF,MAC7BY,SAAQ,WACPpB,EAAiC,8DAwDjCzE,kBAAmBwE,IAErB,kBAAC,EAAD,CACElG,KAAK,YACLoB,OAAQmE,EACR5D,QAASyE,GACT9G,KAAMmG,MC7KdiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,cAAc,W,kBCTzBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.fb52250f.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nconst Header = (props) => {\n  return (\n    <header className='header'>\n      <img src={logo} alt='логотип место' className='header__logo' />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n// import profilePhoto from '../images/profile-photo.jpg';\n\nexport const CurrentUserContext = React.createContext()","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst Card = (props) => {\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = `photo-elements__delete-button ${!isOwn && 'photo-elements__delete-button_hidden'}`;\n\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n  const cardLikeButtonClassName = `photo-elements__like-button ${isLiked && 'photo-elements__like-button_active'}`;\n\n  const handleCardClick = () => {\n    props.onCardClick(props.card);\n  };\n\n  return (\n    <li className='photo-elements__item'>\n      <img\n        className='photo-elements__image'\n        src={props.card.link}\n        alt={props.card.name}\n        onClick={handleCardClick}\n      />\n\n      <div className='photo-elements__caption'>\n        <h2 className='photo-elements__text'>{props.card.name}</h2>\n        <div className='photo-elements__like-container'>\n          <button\n            className={cardLikeButtonClassName}\n            type='button'\n            aria-label='Нравится'\n            onClick={()=> {\n              props.onCardLike(props.card)\n            }}\n          ></button>\n          <p className='photo-elements__like-counter'>\n            {props.card.likes.length}\n          </p>\n        </div>\n        <button\n          className={cardDeleteButtonClassName}\n          type='button'\n          aria-label='Удалить'\n          onClick={() => {\n            props.onCardDelete(props.card)\n          }}\n        ></button>\n      </div>\n    </li>\n  );\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport Card from './Card.jsx';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst Main = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className='main'>\n      <section className='profile'>\n        <div className='profile__photo-container' onClick={props.onEditAvatar}>\n          <img\n            src={currentUser.avatar}\n            alt='фото профиля'\n            className='profile__photo'\n          />\n        </div>\n\n        <div className='profile__info'>\n          <div className='profile__title'>\n            <h1 className='profile__name'>{currentUser.name}</h1>\n            <button\n              className='profile__edit-button'\n              type='button'\n              aria-label='Редактировать'\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n\n          <p className='profile__description'>{currentUser.about}</p>\n        </div>\n\n        <button\n          className='profile__add-button'\n          type='button'\n          aria-label='Добавить'\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n\n      <section className='photo-elements'>\n        <ul className='photo-elements__list'>\n          {props.cards.map((item) => {\n            return (\n              <Card\n                card={item}\n                key={item._id}\n                onCardClick={props.onCardClick}\n                onCardLike={props.onCardLike}\n                onCardDelete={props.onCardDelete}\n              />\n            );\n          })}\n        </ul>\n      </section>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = (props) => {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  return (\n    <div className={`modal ${props.name} ${props.isOpen ? 'modal_opened' : ''}`}>\n      <div className='modal__container'>\n        <h2 className='modal__title'>{props.title}</h2>\n\n        <form\n          action='#'\n          name={`form-${props.name}`}\n          className='modal__form'\n          method='POST'\n          onSubmit={props.onSubmit}\n        >\n          {props.children}\n          <button type='submit' className='modal__button'>\n            {props.submitButtonState}\n          </button>\n        </form>\n\n        <button\n          className='modal__close-button'\n          type='button'\n          aria-label='Закрыть'\n          onClick={props.onClose}\n        ></button>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState, useEffect, useContext } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst EditProfilePopup = (props) => {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault();\n    \n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n  \n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n  \n  return (\n    <PopupWithForm\n      name='edit-modal'\n      title='Редактировать профиль'\n      submitButtonState={props.submitButtonState}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleEditSubmit}\n      children={\n        <>\n          <input\n            type='text'\n            name='profile-name'\n            id='profile-name-input'\n            placeholder='Ваше имя'\n            className='modal__input'\n            required\n            minLength='2'\n            maxLength='40'\n            autoComplete='off'\n            value={name}\n            onChange={handleNameChange}\n          />\n          <p className='modal__input-error-message' id='profile-name-error'></p>\n          <input\n            type='text'\n            name='profile-job'\n            id='profile-job-input'\n            placeholder='Ваша профессия'\n            className='modal__input'\n            required\n            minLength='2'\n            maxLength='200'\n            autoComplete='off'\n            value={description}\n            onChange={handleDescriptionChange}\n          />\n          <p className='modal__input-error-message' id='profile-job-error'></p>\n        </>\n      }\n    />\n  );\n};\nexport default EditProfilePopup;\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx';\n\nconst AddPlacePopup = (props) => {\n  const [placeName, setPlaceName] = useState('');\n  const [placeLink, setPlaceLink] = useState('');\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n\n    props.onAddPlace({\n      name: placeName,\n      link: placeLink,\n    });\n\n    setPlaceName('');\n    setPlaceLink('');\n  };\n\n  const handlePlaceNameInput = (e) => {\n    setPlaceName(e.target.value);\n  };\n  const handlePlaceLinkInput = (e) => {\n    setPlaceLink(e.target.value);\n  };\n\n  return (\n    <PopupWithForm\n      name='add-modal'\n      title='Новое место'\n      submitButtonState={props.submitButtonState}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleAddPlaceSubmit}\n      children={\n        <>\n          <input\n            type='text'\n            name='place-name'\n            id='place-name-input'\n            placeholder='Название'\n            className='modal__input'\n            required\n            minLength='1'\n            maxLength='30'\n            autoComplete='off'\n            value={placeName}\n            onChange={handlePlaceNameInput}\n          />\n          <p className='modal__input-error-message' id='place-name-error'></p>\n\n          <input\n            type='url'\n            name='place-link'\n            id='place-link-input'\n            placeholder='Ссылка на картинку'\n            className='modal__input'\n            required\n            value={placeLink}\n            onChange={handlePlaceLinkInput}\n          />\n          <p className='modal__input-error-message' id='place-link-error'></p>\n        </>\n      }\n    />\n  );\n};\n\nexport default AddPlacePopup;\n","import React, { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm.jsx'\n\nconst EditAvatarPopup = (props) => {\n  const inputRef = useRef();\n  const handleAvatarUpdateSubmit = (e) => {\n    e.preventDefault();\n\n    props.onUpdateAvatar(inputRef.current.value);\n    inputRef.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n        name='avatar-update-modal'\n        title='Обновить аватар'\n        submitButtonState={props.submitButtonState}\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleAvatarUpdateSubmit}\n        children={\n          <>\n            <input\n              ref={inputRef}\n              type='url'\n              name='avatar-link'\n              id='avatar-link-input'\n              placeholder='Ссылка на картинку'\n              className='modal__input'\n              required\n            />\n            <p\n              className='modal__input-error-message'\n              id='avatar-link-error'\n            ></p>\n          </>\n        }\n      />\n  )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\n\nconst ImagePopup = (props) => {\n  return (\n    <>\n      <div\n        className={`${props.name} ${props.isOpen ? 'pic-modal_opened' : ''}`}\n      >\n        <div className='pic-modal__container'>\n          <figure className='pic-modal__picture'>\n            <img\n              src={props.card.link}\n              alt={props.card.name}\n              className='pic-modal__image'\n            />\n            <figcaption className='pic-modal__caption'>\n              {props.card.name}\n            </figcaption>\n          </figure>\n\n          <button\n            className='pic-modal__close-button'\n            type='button'\n            aria-label='Закрыть'\n            onClick={props.onClose}\n          ></button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImagePopup;\n","class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n  /**\n   * checking on errors: if a fetch is ok, returns json, if not shows an error\n   */\n  _checkErrors(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(\n        `Something is wrong: 4 8 15 16 23 42 && ${res.status} ${res.statusText}`\n      );\n    }\n  }\n  /**\n   * @description getting profile info from the server\n   */\n  getProfileInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * getting cards from the server\n   */\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * editing user profile info on the server\n   */\n  editProfile(info) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * updating profile avatar on the server\n   */\n  updateAvatar(avatarUrl) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * adding a new card to the server\n   */\n  addCard({ name, link }) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then(this._checkErrors);\n  }\n  /**\n   * removing a card from the server\n   */\n  removeCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    }).then(this._checkErrors);\n  }\n  /**\n   * @description this method sends a fetch request adding or removing like depending on whether a card is liked or not\n   * @param {*} cardId is used to identify a card that is to changed\n   * @param {*} isLiked is used to identify whether a card is liked or not\n   */\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this._headers,\n      }).then(this._checkErrors);\n    } else {\n      return fetch(`${this._url}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this._headers,\n      }).then(this._checkErrors);\n    }\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-15',\n  headers: {\n    authorization: '1ed91742-56fd-4a56-812b-580db32d6be2',\n    'Content-Type': 'application/json',\n  },\n});\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header.jsx';\nimport Main from './Main.jsx';\nimport Footer from './Footer.jsx';\nimport EditProfilePopup from './EditProfilePopup.jsx';\nimport AddPlacePopup from './AddPlacePopup.jsx';\nimport EditAvatarPopup from './EditAvatarPopup.jsx';\nimport ImagePopup from './ImagePopup.jsx';\nimport api from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nconst App = () => {\n  /**\n   * user\n   */\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: '',\n    avatar: '',\n  });\n  /**\n   * profile editing\n   */\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [editSubmitButtonState, seteditSubmitButtonState] = useState('Сохранить');\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleUpdateUser = (data) => {\n    seteditSubmitButtonState('Сохранение...');\n    api\n      .editProfile(data)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        seteditSubmitButtonState('Сохранить');\n      });\n  };\n  /**\n   * cards\n   */\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  /**\n   * new card adding\n   */\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [addCardSubmitButtonState, setAddCardSubmitButtonState] = useState('Сохранить');\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleAddPlace = (data) => {\n    setAddCardSubmitButtonState('Сохранение...');\n    api\n      .addCard({\n        name: data.name,\n        link: data.link,\n      })\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        setAddCardSubmitButtonState('Сохранить');\n      });\n  };\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleCardDelete = (card) => {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((item) => item._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => console.error(err));\n  };\n  /**\n   * avatar updating\n   */\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [avatarUpdateSubmitButtonState, setAvatarUpdateSubmitButtonState] = useState('Сохранить');\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleUpdateAvatar = (url) => {\n    setAvatarUpdateSubmitButtonState('Сохранение...');\n    api\n      .updateAvatar(url)\n      .then((res) => {\n        setCurrentUser({ ...currentUser, avatar: res.avatar });\n        closeAllPopups();\n      })\n      .catch((err) => console.error(err))\n      .finally(() => {\n        setAvatarUpdateSubmitButtonState('Сохранить');\n      });\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n  };\n\n  useEffect(() => {\n    Promise.all([api.getProfileInfo(), api.getCards()])\n      .then((res) => {\n        const [userInfo, initialCards] = res;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => console.error(err));\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header />\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        onCardClick={handleCardClick}\n        cards={cards}\n        onCardLike={handleCardLike}\n        onCardDelete={handleCardDelete}\n      />\n      <Footer />\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n        submitButtonState={editSubmitButtonState}\n      />\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlace}\n        submitButtonState={addCardSubmitButtonState}\n      />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n        submitButtonState={avatarUpdateSubmitButtonState}\n      />\n      <ImagePopup\n        name='pic-modal'\n        isOpen={isImagePopupOpen}\n        onClose={closeAllPopups}\n        card={selectedCard}\n      />\n    </CurrentUserContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}